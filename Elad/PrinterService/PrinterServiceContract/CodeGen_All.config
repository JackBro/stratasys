<?xml version="1.0" encoding="utf-8"?>
<wsdcodegen ConfigFileVersion="1.3">
  <LayerPrefix>PrinterServiceType</LayerPrefix>
  <LayerNumber>1</LayerNumber>
  <!--************************************************************-->
  <!--*** WSDLS TO BE INCLUDED ***-->
  <!--************************************************************-->
  <Wsdl PrefixMessageStructureNames="true">
    <Path>C:\sources\PrinterService\PrinterServiceContract\WSDPrinterService.wsdl</Path>
  </Wsdl>
  <Wsdl PrefixMessageStructureNames="true">
    <Path>C:\sources\PrinterService\PrinterServiceContract\WSDPrinterServiceV12.wsdl</Path>
  </Wsdl>


  <!--************************************************************-->
  <!--*** METADATA CONFIGURATION ***-->
  <!--Be sure to change all default fields in ThisModelMetadata!-->
  <!--All fields except <manufacturer> and <modelName> are optional.-->
  <!--************************************************************-->
  <ThisModelMetadata>
    <Manufacturer>Stratasys</Manufacturer>
    <ManufacturerURL>http://www.stratasys.com</ManufacturerURL>
    <ModelName>Connex</ModelName>
    <ModelNumber>500</ModelNumber>
    <ModelURL>http://www.stratasys.com</ModelURL>
    <PresentationURL>http://www.stratasys.com</PresentationURL>
  </ThisModelMetadata>

  <!--Hosts built with this metadata can support all of these services.-->
  <RelationshipMetadata>
    <HostMetadata>
      <Hosted>
        <Types>http://schemas.microsoft.com/windows/2006/08/wdp/print/:PrinterServiceType</Types>
        <ServiceId>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType0</ServiceId>
        <PnPXHardwareId>SsysPnt_Cnx_235_HWID</PnPXHardwareId>
        <PnPXCompatibleId>PnPX_SsysPnt_CPID</PnPXCompatibleId>
      </Hosted>
      <Hosted>
        <Types>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/:PrinterServiceV12Type</Types>
        <ServiceId>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type0</ServiceId>
        <PnPXHardwareId>SsysPnt12_Cnx_235_HWID</PnPXHardwareId>
        <PnPXCompatibleId>PnPX_SsysPnt_CPID</PnPXCompatibleId>
      </Hosted>
    </HostMetadata>
  </RelationshipMetadata>

  <!--This Macro will be included in all header files.-->
  <Macro Name="PragmaOnce">
<![CDATA[
#pragma once
]]>
  </Macro>
  <!--Additionally, the predefined "DoNotModify" macro will be included in all files.-->


  <!--************************************************************-->
  <!--*** TYPES HEADER FILE ***-->
  <!--This file contains forward declarations and structure definitions.-->
  <!--************************************************************-->
  <File Name="PrinterServiceTypeTypes.h">
    <Include Macro="DoNotModify" />
    <Include Macro="PragmaOnce" />
    <NamespaceDeclarations />
    <NamespaceNameMacros />
    <StructDeclarations />
    <StructDefinitions />
    <EnumerationValueDeclarations />
    <TypeTableDeclarations />
    <MessageStructureDefinitions />
    <PortTypeDeclarations />
    <RelationshipMetadataDeclaration />
    <ThisModelMetadataDeclaration />
    <HostBuilderDeclaration>
      <Interface>IPrinterServiceType</Interface>
      <Interface>IPrinterServiceV12Type</Interface>
    </HostBuilderDeclaration>
    <StubDeclarations>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
    </StubDeclarations>
    <StubDeclarations Events="True">
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <Operation>PrinterElementsChangeEvent</Operation>
      <Operation>PrinterStatusSummaryEvent</Operation>
      <Operation>PrinterStatusConditionEvent</Operation>
      <Operation>PrinterStatusConditionClearedEvent</Operation>
      <Operation>JobStatusEvent</Operation>
      <Operation>JobEndStateEvent</Operation>
    </StubDeclarations>
    <StubDeclarations>
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
    </StubDeclarations>
  </File>


  <!--************************************************************-->
  <!--*** TYPES FILE ***-->
  <!--This file contains type table and operation definitions.-->
  <!--************************************************************-->
  <File Name="PrinterServiceTypeTypes.cpp">
    <Include Macro="DoNotModify" />
    <LiteralInclude Language="C" Local="True">stdafx.h</LiteralInclude>
    <LiteralInclude Language="C" Local="False">wsdapi.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">PrinterServiceType.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">PrinterServiceTypeTypes.h</LiteralInclude>
    <NamespaceDefinitions />
    <TypeTableDefinitions />
    <MessageTypeDefinitions />
    <PortTypeDefinitions>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <StubFunction>True</StubFunction>
      <Events>True</Events>
      <EventStubFunction>True</EventStubFunction>
    </PortTypeDefinitions>
    <PortTypeDefinitions>
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
      <StubFunction>True</StubFunction>
    </PortTypeDefinitions>
    <RelationshipMetadataDefinition />
    <ThisModelMetadataDefinition />
  </File>


  <!--************************************************************-->
  <!--*** INTERFACE IDL ***-->
  <!--This file defines the interfaces for the specified services.-->
  <!--************************************************************-->
  <File Name="PrinterServiceType.idl">
    <Include Macro="DoNotModify" />
<![CDATA[
interface IPrinterServiceType;
interface IPrinterServiceTypeProxy;
interface IPrinterServiceTypeEventNotify;

interface IPrinterServiceV12Type;
interface IPrinterServiceV12TypeProxy;
]]>
    <LiteralInclude Language="IDL">oaidl.idl</LiteralInclude>
    <LiteralInclude Language="IDL">ocidl.idl</LiteralInclude>
    <LiteralInclude Language="IDL">wsdattachment.idl</LiteralInclude>
    <LiteralInclude Language="IDL">wsdclient.idl</LiteralInclude>
    <LiteralInclude Language="IDL">wsdhost.idl</LiteralInclude>
    <LiteralInclude Language="IDL">PrinterServiceTypeTypes.h</LiteralInclude>
<![CDATA[
//
// IPrinterServiceType Interface
//
[
    object,
    uuid(9d6aa8be-71f6-46d0-944b-121c678bab48),
    helpstring("IPrinterServiceType Interface"),
    pointer_default(unique),
    restricted,
    local
]
interface IPrinterServiceType : IUnknown
{
]]>
    <IdlFunctionDeclarations>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
    </IdlFunctionDeclarations>
<![CDATA[
};
]]>
<![CDATA[
//
// IPrinterServiceTypeProxy Interface
//
[
    object,
    uuid(2a470947-2531-4e55-8242-4198f4186ba4),
    helpstring("IPrinterServiceTypeProxy Interface"),
    pointer_default(unique),
    restricted,
    local
]
interface IPrinterServiceTypeProxy : IPrinterServiceType
{
    HRESULT Init(IWSDServiceProxy* genericProxy);
]]>
    <IdlFunctionDeclarations Async="True">
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <Operation>CreatePrintJob</Operation>
      <Operation>SendDocument</Operation>
      <Operation>AddDocument</Operation>
      <Operation>CancelJob</Operation>
      <Operation>GetPrinterElements</Operation>
      <Operation>GetJobElements</Operation>
      <Operation>GetActiveJobs</Operation>
      <Operation>GetJobHistory</Operation>
      <Operation>SetEventRate</Operation>
    </IdlFunctionDeclarations>
    <SubscriptionIdlFunctionDeclarations>
      <NotificationInterface>IPrinterServiceTypeEventNotify</NotificationInterface>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <Operation>PrinterElementsChangeEvent</Operation>
      <Operation>PrinterStatusSummaryEvent</Operation>
      <Operation>PrinterStatusConditionEvent</Operation>
      <Operation>PrinterStatusConditionClearedEvent</Operation>
      <Operation>JobStatusEvent</Operation>
      <Operation>JobEndStateEvent</Operation>
    </SubscriptionIdlFunctionDeclarations>
<![CDATA[
};
]]>
<![CDATA[
//
// IPrinterServiceTypeEventNotify Interface
//
[
    object,
    uuid(69538431-8e7f-43fa-b76b-ef39a2876602),
    helpstring("IPrinterServiceTypeEventNotify Interface"),
    pointer_default(unique),
    restricted,
    local
]
interface IPrinterServiceTypeEventNotify : IUnknown
{
]]>
    <IdlFunctionDeclarations Events="True">
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
    </IdlFunctionDeclarations>
<![CDATA[
};
]]>
<![CDATA[
//
// IPrinterServiceV12Type Interface
//
[
    object,
    uuid(5fa7991a-9f96-4bda-9daa-6d0f4a238442),
    helpstring("IPrinterServiceV12Type Interface"),
    pointer_default(unique),
    restricted,
    local
]
interface IPrinterServiceV12Type : IUnknown
{
]]>
    <IdlFunctionDeclarations>
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
    </IdlFunctionDeclarations>
<![CDATA[
};
]]>
<![CDATA[
//
// IPrinterServiceV12TypeProxy Interface
//
[
    object,
    uuid(ec86c41d-cbe6-49ef-9c71-caefb876a04d),
    helpstring("IPrinterServiceV12TypeProxy Interface"),
    pointer_default(unique),
    restricted,
    local
]
interface IPrinterServiceV12TypeProxy : IPrinterServiceV12Type
{
    HRESULT Init(IWSDServiceProxy* genericProxy);
]]>
    <IdlFunctionDeclarations Async="True">
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
      <Operation>SetPrinterElements</Operation>
    </IdlFunctionDeclarations>
<![CDATA[
};
]]>
  </File>


  <!--************************************************************-->
  <!--*** PROXY HEADER FILES ***-->
  <!--This file contains declarations for proxy classes and builder functions.-->
  <!--************************************************************-->
  <File Name="PrinterServiceTypeProxy.h">
    <Include Macro="DoNotModify" />
    <Include Macro="PragmaOnce" />
<![CDATA[
class CPrinterServiceTypeProxy;
class CPrinterServiceTypeEventSource;
class CPrinterServiceV12TypeProxy;
]]>
    <ProxyBuilderDeclarations>
      <ProxyClass>CPrinterServiceTypeProxy</ProxyClass>
    </ProxyBuilderDeclarations>
<![CDATA[
class CPrinterServiceTypeProxy: public IPrinterServiceTypeProxy
{
protected:
    ~CPrinterServiceTypeProxy();
    LONG m_cRef;
    IWSDServiceProxy* m_genericProxy;

public:
    HRESULT STDMETHODCALLTYPE Init(IWSDServiceProxy* genericProxy);
    CPrinterServiceTypeProxy();
]]>
    <IUnknownDeclarations />
    <FunctionDeclarations>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
    </FunctionDeclarations>
    <FunctionDeclarations Async="True">
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <Operation>CreatePrintJob</Operation>
      <Operation>SendDocument</Operation>
      <Operation>AddDocument</Operation>
      <Operation>CancelJob</Operation>
      <Operation>GetPrinterElements</Operation>
      <Operation>GetJobElements</Operation>
      <Operation>GetActiveJobs</Operation>
      <Operation>GetJobHistory</Operation>
      <Operation>SetEventRate</Operation>
    </FunctionDeclarations>
    <SubscriptionFunctionDeclarations>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <NotificationInterface>IPrinterServiceTypeEventNotify</NotificationInterface>
    </SubscriptionFunctionDeclarations>
<![CDATA[
};
]]>
    <EventSourceBuilderDeclarations>
      <ProxyClass>CPrinterServiceTypeEventSource</ProxyClass>
    </EventSourceBuilderDeclarations>
<![CDATA[
class CPrinterServiceTypeEventSource: public IPrinterServiceTypeEventNotify
{
protected:
    ~CPrinterServiceTypeEventSource();
    LONG m_cRef;
    IWSDDeviceHost* m_host;
    const WCHAR* m_serviceId;

public:
    HRESULT STDMETHODCALLTYPE Init(IWSDDeviceHost* pIWSDDeviceHost, const WCHAR* serviceId);
    CPrinterServiceTypeEventSource();
]]>
    <IUnknownDeclarations />
    <FunctionDeclarations Events="True">
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
    </FunctionDeclarations>
<![CDATA[
};
]]>
    <ProxyBuilderDeclarations>
      <ProxyClass>CPrinterServiceV12TypeProxy</ProxyClass>
    </ProxyBuilderDeclarations>
<![CDATA[
class CPrinterServiceV12TypeProxy: public IPrinterServiceV12TypeProxy
{
protected:
    ~CPrinterServiceV12TypeProxy();
    LONG m_cRef;
    IWSDServiceProxy* m_genericProxy;

public:
    HRESULT STDMETHODCALLTYPE Init(IWSDServiceProxy* genericProxy);
    CPrinterServiceV12TypeProxy();
]]>
    <IUnknownDeclarations />
    <FunctionDeclarations>
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
    </FunctionDeclarations>
    <FunctionDeclarations Async="True">
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
      <Operation>SetPrinterElements</Operation>
    </FunctionDeclarations>
<![CDATA[
};
]]>
  </File>


  <!--************************************************************-->
  <!--*** PROXY FILE ***-->
  <!--This file contains code for proxy classes and functions.-->
  <!--************************************************************-->
  <File Name="PrinterServiceTypeProxy.cpp">
    <Include Macro="DoNotModify" />
    <LiteralInclude Language="C" Local="True">stdafx.h</LiteralInclude>
    <LiteralInclude Language="C" Local="False">wsdapi.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">PrinterServiceType.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">PrinterServiceTypeTypes.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">PrinterServiceTypeProxy.h</LiteralInclude>
    <ProxyBuilderImplementations>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <ProxyClass>CPrinterServiceTypeProxy</ProxyClass>
    </ProxyBuilderImplementations>
<![CDATA[
CPrinterServiceTypeProxy::CPrinterServiceTypeProxy() :
    m_cRef(1), m_genericProxy(NULL)
{
}

CPrinterServiceTypeProxy::~CPrinterServiceTypeProxy() 
{
    if ( NULL != m_genericProxy )
    {
        m_genericProxy->Release();
        m_genericProxy = NULL;
    }
};

HRESULT STDMETHODCALLTYPE CPrinterServiceTypeProxy::Init(
    /* [in] */ IWSDServiceProxy* pIWSDServiceProxy )
{
    if( NULL == pIWSDServiceProxy )
    {
        return E_INVALIDARG;
    }

    m_genericProxy = pIWSDServiceProxy;
    m_genericProxy->AddRef();

    return S_OK;
}
]]>
    <IUnknownDefinitions>
      <ProxyClass>CPrinterServiceTypeProxy</ProxyClass>
      <RefCountVar>m_cRef</RefCountVar>
      <Interface>IPrinterServiceType</Interface>
      <Interface>IPrinterServiceTypeProxy</Interface>
    </IUnknownDefinitions>
    <ProxyFunctionImplementations>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <ProxyClass>CPrinterServiceTypeProxy</ProxyClass>
    </ProxyFunctionImplementations>
    <ProxyFunctionImplementations Async="True">
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <ProxyClass>CPrinterServiceTypeProxy</ProxyClass>
      <Operation>CreatePrintJob</Operation>
      <Operation>SendDocument</Operation>
      <Operation>AddDocument</Operation>
      <Operation>CancelJob</Operation>
      <Operation>GetPrinterElements</Operation>
      <Operation>GetJobElements</Operation>
      <Operation>GetActiveJobs</Operation>
      <Operation>GetJobHistory</Operation>
      <Operation>SetEventRate</Operation>
    </ProxyFunctionImplementations>
    <SubscriptionProxyFunctionImplementations>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <ProxyClass>CPrinterServiceTypeProxy</ProxyClass>
      <NotificationInterface>IPrinterServiceTypeEventNotify</NotificationInterface>
    </SubscriptionProxyFunctionImplementations>
    <EventSourceBuilderImplementations>
      <ProxyClass>CPrinterServiceTypeEventSource</ProxyClass>
    </EventSourceBuilderImplementations>
<![CDATA[
CPrinterServiceTypeEventSource::CPrinterServiceTypeEventSource() :
    m_cRef(1), m_host(NULL)
{
}

CPrinterServiceTypeEventSource::~CPrinterServiceTypeEventSource() 
{
    if ( NULL != m_host )
    {
        m_host->Release();
        m_host = NULL;
    }
};

HRESULT STDMETHODCALLTYPE CPrinterServiceTypeEventSource::Init(
    /* [in] */ IWSDDeviceHost* pIWSDDeviceHost,
    /* [in] */ const WCHAR* serviceId )
{
    if( NULL == pIWSDDeviceHost )
    {
        return E_INVALIDARG;
    }

    m_serviceId = serviceId;

    m_host = pIWSDDeviceHost;
    m_host->AddRef();

    return S_OK;
}
]]>
    <IUnknownDefinitions>
      <ProxyClass>CPrinterServiceTypeEventSource</ProxyClass>
      <RefCountVar>m_cRef</RefCountVar>
      <Interface>IPrinterServiceTypeEventNotify</Interface>
    </IUnknownDefinitions>
    <ProxyFunctionImplementations Events="True">
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <ProxyClass>CPrinterServiceTypeEventSource</ProxyClass>
    </ProxyFunctionImplementations>
    <ProxyBuilderImplementations>
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
      <ProxyClass>CPrinterServiceV12TypeProxy</ProxyClass>
    </ProxyBuilderImplementations>
<![CDATA[
CPrinterServiceV12TypeProxy::CPrinterServiceV12TypeProxy() :
    m_cRef(1), m_genericProxy(NULL)
{
}

CPrinterServiceV12TypeProxy::~CPrinterServiceV12TypeProxy() 
{
    if ( NULL != m_genericProxy )
    {
        m_genericProxy->Release();
        m_genericProxy = NULL;
    }
};

HRESULT STDMETHODCALLTYPE CPrinterServiceV12TypeProxy::Init(
    /* [in] */ IWSDServiceProxy* pIWSDServiceProxy )
{
    if( NULL == pIWSDServiceProxy )
    {
        return E_INVALIDARG;
    }

    m_genericProxy = pIWSDServiceProxy;
    m_genericProxy->AddRef();

    return S_OK;
}
]]>
    <IUnknownDefinitions>
      <ProxyClass>CPrinterServiceV12TypeProxy</ProxyClass>
      <RefCountVar>m_cRef</RefCountVar>
      <Interface>IPrinterServiceV12Type</Interface>
      <Interface>IPrinterServiceV12TypeProxy</Interface>
    </IUnknownDefinitions>
    <ProxyFunctionImplementations>
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
      <ProxyClass>CPrinterServiceV12TypeProxy</ProxyClass>
    </ProxyFunctionImplementations>
    <ProxyFunctionImplementations Async="True">
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
      <ProxyClass>CPrinterServiceV12TypeProxy</ProxyClass>
      <Operation>SetPrinterElements</Operation>
    </ProxyFunctionImplementations>
  </File>


  <!--************************************************************-->
  <!--*** STUB FILE ***-->
  <!--This file contains stub function code.-->
  <!--************************************************************-->
  <File Name="PrinterServiceTypeStub.cpp">
    <Include Macro="DoNotModify" />
    <LiteralInclude Language="C" Local="True">stdafx.h</LiteralInclude>
    <LiteralInclude Language="C" Local="False">wsdapi.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">PrinterServiceType.h</LiteralInclude>
    <LiteralInclude Language="C" Local="True">PrinterServiceTypeTypes.h</LiteralInclude>
    <MessageTypeDeclarations />
    <HostBuilderImplementation>
      <HostedService>
        <ServiceId>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType0</ServiceId>
        <CodeName>PrinterServiceType</CodeName>
        <Interface>IPrinterServiceType</Interface>
      </HostedService>
      <HostedService>
        <ServiceId>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type0</ServiceId>
        <CodeName>PrinterServiceV12Type</CodeName>
        <Interface>IPrinterServiceV12Type</Interface>
      </HostedService>
    </HostBuilderImplementation>
    <StubDefinitions>
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <ServerClass>IPrinterServiceType</ServerClass>
      <Deallocator>WSDFreeLinkedMemory</Deallocator>
    </StubDefinitions>
    <StubDefinitions Events="True">
      <PortType>http://schemas.microsoft.com/windows/2006/08/wdp/print/PrinterServiceType</PortType>
      <ServerClass>IPrinterServiceTypeEventNotify</ServerClass>
      <Deallocator>WSDFreeLinkedMemory</Deallocator>
    </StubDefinitions>
    <StubDefinitions>
      <PortType>http://schemas.microsoft.com/windows/2012/10/wdp/printV12/PrinterServiceV12Type</PortType>
      <ServerClass>IPrinterServiceV12Type</ServerClass>
      <Deallocator>WSDFreeLinkedMemory</Deallocator>
    </StubDefinitions>
  </File>


  <!--************************************************************-->
  <!--*** README FILE ***-->
  <!--This file contains readme text.-->
  <!---->
  <!--Changes made to the contents of the metadata section of this-->
  <!--configuration file will not impact the accuracy of the Readme.txt-->
  <!--file, but more significant changes may render the Readme.txt file-->
  <!--inaccurate.-->
  <!--************************************************************-->
  <File Name="Readme.txt">
<![CDATA[=== Index ====================================================================
* Quick start guide
  + Client
  + Service
  + Compiling
* Generated files
* Generated interfaces
  + Base interfaces
  + Proxy interfaces
  + Event notify interfaces
* Generated classes
  + Proxy classes
  + Event source classes
* Generated functions
  + Proxy builder functions
  + Host builder function
  + Stub functions
* Generated structures
  + Metadata structures
  + Parameter structures




=== Quick start guide ========================================================
--- Client ---------------------------
Your client application should call one of the proxy builder functions:
* CreateCPrinterServiceTypeProxy() or CreateCPrinterServiceTypeProxyById(), to instantiate a class of type
  CPrinterServiceTypeProxy
* CreateCPrinterServiceV12TypeProxy() or CreateCPrinterServiceV12TypeProxyById(), to instantiate a class of type
  CPrinterServiceV12TypeProxy

All of these functions are defined in PrinterServiceTypeTypes.h
Once one of these classes has been successfully created, it may be used to
issue service commands to a host.



--- Service --------------------------
To build a service, implement one or more of the following
interfaces:
* IPrinterServiceType
* IPrinterServiceV12Type

Then, pass one or more of these objects into the host builder function,
These interfaces do NOT have to be implemented by the same object.
CreatePrinterServiceTypeHost() (see below).  Lastly, call Start()
on the resulting IWSDDeviceHost object.



--- Compiling -----------------------
All generated files must be compiled together into one static library,
executable, or DLL.

The generated IDL file (PrinterServiceType.idl) may be compiled into
C++ files with the MIDL tool.  The other generated files require that
PrinterServiceType.idl will be compiled into PrinterServiceType.h.




=== Generated files ==========================================================
* PrinterServiceTypeTypes.h    Forward-declarations and struct definitions
* PrinterServiceTypeTypes.cpp  Type table and operation structure definitions
* PrinterServiceType.idl       Defines the interfaces for the specified services
* PrinterServiceTypeProxy.h    Declares proxy classes and builder functions
* PrinterServiceTypeProxy.cpp  Proxy class and function implementations
* PrinterServiceTypeStub.cpp   Stub function code



=== Generated interfaces =====================================================
--- Base interfaces ------------------
* IPrinterServiceType
* IPrinterServiceV12Type

These base interfaces are generated directly by the WSDL, and are used to
implement your service.  Clients should use the extended proxy classes,
below.  No eventing operations are included in these base interfaces.

Your service objects should implement these interfaces.



--- Proxy interfaces -----------------
* IPrinterServiceTypeProxy
* IPrinterServiceV12TypeProxy

These proxy interfaces extend the base interfaces (listed above) by adding
client-only functionality such as asynchronous service calls for two-way
operations and subscribe/unsubscribe methods for eventing operations.

These interfaces should only be implemented by the generated client proxies.
Your client code should instantiate objects that expose these interfaces
using the proxy builder functions, and should call into the exposed methods.



--- Event notify interfaces ----------
* IPrinterServiceTypeEventNotify

These event notify interfaces are used by services to issue events, and are
implemented by client code to receive events.  Subscription management is
handled separately in the proxy interfaces (listed above).

Your service code should instantiate objects that expose these interfaces
using the event source builder functions (see below), and should call into
the exposed methods.

You should build a client object that implements these interfaces, and
register that object when subscribing for events.  Your object will receive
callbacks when you receive events from the service.



=== Generated classes ========================================================
--- Proxy classes --------------------
* CPrinterServiceTypeProxy
* CPrinterServiceV12TypeProxy

These proxy classes can be called from your application, and will issue
messages to a service.  To instantiate one of these classes, use a proxy
builder function (see below).



--- Event source classes -------------
* CPrinterServiceTypeEventSource

These event source classes can be called from your service, and will issue
events to subscribed clients.  To instantiate one of these classes, use a
event source builder function (see below).




=== Generated functions ======================================================
--- Proxy builder functions ----------
* CreateCPrinterServiceTypeProxy()
* CreateCPrinterServiceV12TypeProxy()

Use these functions to generate proxy classes (see above).



--- Host builder function ------------
* CreatePrinterServiceTypeHost()

Use this function to create a host and register your service(s).


--- Event source builder functions ---
* CreateCPrinterServiceTypeEventSource()
* CreateCPrinterServiceV12TypeEventSource()

Use these functions to generate event source classes (see above).



--- Stub functions -------------------
These functions receive calls from WSDAPI and dispatch them into your
service object.  You should not call these functions from your application.




=== Generated structures =====================================================
--- Metadata structures --------------
* WSD_HOST_METADATA hostMetadata
* WSD_THIS_MODEL_METADATA thisModelMetadata

Pass these structures to your host builder function (see above).



--- Parameter structures -------------
All parameter structures are defined inside PrinterServiceTypeTypes.h.
]]>
  </File>
</wsdcodegen>